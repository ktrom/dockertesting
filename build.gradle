plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

mainClassName='com.example.dockerfun.DockerFunApplication'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

jar {
    archiveBaseName = 'dockerfun'
    archiveVersion =  '0.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

task copyJarToDockerDir(type: Copy) {
    from "$buildDir/libs"
    include "**/*.jar"
    into "$buildDir/docker"
}

task prepareDockerDir(type: Copy) {
    from "$projectDir/docker"
    include "**/*"
    filter { it.replaceAll('<%=name%>', project.name) } // makes Dockerfile more generic
    into "$buildDir/docker"
}

task buildDockerImage(type:Exec) {
    workingDir "$buildDir"
    commandLine "docker", "build", "-t", "ktrom/att", "docker"
}

task pushDockerImage(type: Exec) {
    commandLine "docker", "push", "ktrom/att"
}

copyJarToDockerDir.dependsOn build
buildDockerImage.dependsOn prepareDockerDir
buildDockerImage.dependsOn copyJarToDockerDir
pushDockerImage.dependsOn buildDockerImage